import pytest
from friendly_bytes import friendly_bytes

def test_on_positive():

    assert(friendly_bytes( 212321 ) =='212.32 KB')
    assert(friendly_bytes( 45450 ) =='45.45 KB')
    assert(friendly_bytes( 903428347234 ) =='903.42 GB')
    assert(friendly_bytes( 238942.443 ) =='238.94 KB')
    assert(friendly_bytes( 8343493409.22212 ) =='8.34 GB')
    assert(friendly_bytes( 840933049 ) =='840.93 MB')
    assert(friendly_bytes( 0 ) =='0 B')
    assert(friendly_bytes( 0.0 ) =='0 B')
    assert(friendly_bytes( 483434093 ) =='483.43 MB')
    assert(friendly_bytes( 24 ) =='24.0 B')
    assert(friendly_bytes( 24.0 ) =='24.0 B')
    assert(friendly_bytes( 0.3 ) =='0.3 B')
    assert(friendly_bytes( 90.59438934 ) =='90.59 B')
    assert(friendly_bytes( 122133 ) =='122.13 KB')
    assert(friendly_bytes( 328939324239329234 ) =='328.93 PB')
    assert(friendly_bytes( 3434904393490 ) =='3.43 TB')
    assert(friendly_bytes( 349823093209 ) =='349.82 GB')
    assert(friendly_bytes( 332423.3232432 ) =='332.42 KB')
    assert(friendly_bytes( 48234023409 ) =='48.23 GB')
    assert(friendly_bytes( 32.3 ) =='32.29 B')
    assert(friendly_bytes( 239023932 ) =='239.02 MB')
    assert(friendly_bytes( 0 ) =='0 B')
    assert(friendly_bytes( 11 ) =='11.0 B')

def test_on_negative():

    assert(friendly_bytes(- 212321 ) =='-212.32 KB')
    assert(friendly_bytes(- 45450 ) =='-45.45 KB')
    assert(friendly_bytes(- 903428347234 ) =='-903.42 GB')
    assert(friendly_bytes(- 238942.443 ) =='-238.94 KB')
    assert(friendly_bytes(- 8343493409.22212 ) =='-8.34 GB')
    assert(friendly_bytes(- 840933049 ) =='-840.93 MB')
    assert(friendly_bytes(- 0 ) =='0 B')
    assert(friendly_bytes(- 0.0 ) =='0 B')
    assert(friendly_bytes(- 483434093 ) =='-483.43 MB')
    assert(friendly_bytes(- 24 ) =='-24.0 B')
    assert(friendly_bytes(- 24.0 ) =='-24.0 B')
    assert(friendly_bytes(- 0.3 ) =='-0.3 B')
    assert(friendly_bytes(- 90.59438934 ) =='-90.59 B')
    assert(friendly_bytes(- 122133 ) =='-122.13 KB')
    assert(friendly_bytes(- 328939324239329234 ) =='-328.93 PB')
    assert(friendly_bytes(- 3434904393490 ) =='-3.43 TB')
    assert(friendly_bytes(- 349823093209 ) =='-349.82 GB')
    assert(friendly_bytes(- 332423.3232432 ) =='-332.42 KB')
    assert(friendly_bytes(- 48234023409 ) =='-48.23 GB')
    assert(friendly_bytes(- 32.3 ) =='-32.29 B')
    assert(friendly_bytes(- 239023932 ) =='-239.02 MB')
    assert(friendly_bytes(- 0 ) =='0 B')
    assert(friendly_bytes(- 11 ) =='-11.0 B')

def test_on_decimals():

    assert(friendly_bytes( 43443.2334243 ) =='43.44 KB')
    assert(friendly_bytes( 43456.879889 ) =='43.45 KB')
    assert(friendly_bytes( 12223.889 ) =='12.22 KB')
    assert(friendly_bytes( 32324.009 ) =='32.32 KB')
    assert(friendly_bytes( 873489732.079067 ) =='873.48 MB')
    assert(friendly_bytes( 1283.003643 ) =='1.28 KB')
    assert(friendly_bytes( 38732.3402424 ) =='38.73 KB')
    assert(friendly_bytes( 11.22 ) =='11.22 B')
    assert(friendly_bytes( 32873298329.32 ) =='32.87 GB')
    assert(friendly_bytes( 3832.1 ) =='3.83 KB')

def test_decimal_parameter():

    assert (friendly_bytes( 43443.2334243 ,decimals= 0 ) =='43 KB')
    assert (friendly_bytes( 43443.2334243 ,decimals= 1 ) =='43.4 KB')
    assert (friendly_bytes( 43443.2334243 ,decimals= 2 ) =='43.44 KB')
    assert (friendly_bytes( 43443.2334243 ,decimals= 3 ) =='43.443 KB')
    assert (friendly_bytes( 43443.2334243 ,decimals= 4 ) =='43.4432 KB')
    assert (friendly_bytes( 43443.2334243 ,decimals= 5 ) =='43.44323 KB')
    assert (friendly_bytes( 43443.2334243 ,decimals= 6 ) =='43.443233 KB')
    assert (friendly_bytes( 43443.2334243 ,decimals= 7 ) =='43.4432334 KB')
    assert (friendly_bytes( 43443.2334243 ,decimals= 8 ) =='43.44323342 KB')
    assert (friendly_bytes( 43443.2334243 ,decimals= 9 ) =='43.443233424 KB')
    assert (friendly_bytes( 43456.879889 ,decimals= 0 ) =='43 KB')
    assert (friendly_bytes( 43456.879889 ,decimals= 1 ) =='43.4 KB')
    assert (friendly_bytes( 43456.879889 ,decimals= 2 ) =='43.45 KB')
    assert (friendly_bytes( 43456.879889 ,decimals= 3 ) =='43.456 KB')
    assert (friendly_bytes( 43456.879889 ,decimals= 4 ) =='43.4568 KB')
    assert (friendly_bytes( 43456.879889 ,decimals= 5 ) =='43.45687 KB')
    assert (friendly_bytes( 43456.879889 ,decimals= 6 ) =='43.456879 KB')
    assert (friendly_bytes( 43456.879889 ,decimals= 7 ) =='43.4568798 KB')
    assert (friendly_bytes( 43456.879889 ,decimals= 8 ) =='43.45687988 KB')
    assert (friendly_bytes( 43456.879889 ,decimals= 9 ) =='43.456879889 KB')
    assert (friendly_bytes( 12223.889 ,decimals= 0 ) =='12 KB')
    assert (friendly_bytes( 12223.889 ,decimals= 1 ) =='12.2 KB')
    assert (friendly_bytes( 12223.889 ,decimals= 2 ) =='12.22 KB')
    assert (friendly_bytes( 12223.889 ,decimals= 3 ) =='12.223 KB')
    assert (friendly_bytes( 12223.889 ,decimals= 4 ) =='12.2238 KB')
    assert (friendly_bytes( 12223.889 ,decimals= 5 ) =='12.22388 KB')
    assert (friendly_bytes( 12223.889 ,decimals= 6 ) =='12.223889 KB')
    assert (friendly_bytes( 12223.889 ,decimals= 7 ) =='12.223889 KB')
    assert (friendly_bytes( 12223.889 ,decimals= 8 ) =='12.223889 KB')
    assert (friendly_bytes( 12223.889 ,decimals= 9 ) =='12.223889 KB')
    assert (friendly_bytes( 32324.009 ,decimals= 0 ) =='32 KB')
    assert (friendly_bytes( 32324.009 ,decimals= 1 ) =='32.3 KB')
    assert (friendly_bytes( 32324.009 ,decimals= 2 ) =='32.32 KB')
    assert (friendly_bytes( 32324.009 ,decimals= 3 ) =='32.324 KB')
    assert (friendly_bytes( 32324.009 ,decimals= 4 ) =='32.324 KB')
    assert (friendly_bytes( 32324.009 ,decimals= 5 ) =='32.324 KB')
    assert (friendly_bytes( 32324.009 ,decimals= 6 ) =='32.324008 KB')
    assert (friendly_bytes( 32324.009 ,decimals= 7 ) =='32.3240089 KB')
    assert (friendly_bytes( 32324.009 ,decimals= 8 ) =='32.32400899 KB')
    assert (friendly_bytes( 32324.009 ,decimals= 9 ) =='32.324008999 KB')
    assert (friendly_bytes( 873489732.079067 ,decimals= 0 ) =='873 MB')
    assert (friendly_bytes( 873489732.079067 ,decimals= 1 ) =='873.4 MB')
    assert (friendly_bytes( 873489732.079067 ,decimals= 2 ) =='873.48 MB')
    assert (friendly_bytes( 873489732.079067 ,decimals= 3 ) =='873.489 MB')
    assert (friendly_bytes( 873489732.079067 ,decimals= 4 ) =='873.4897 MB')
    assert (friendly_bytes( 873489732.079067 ,decimals= 5 ) =='873.48973 MB')
    assert (friendly_bytes( 873489732.079067 ,decimals= 6 ) =='873.489732 MB')
    assert (friendly_bytes( 873489732.079067 ,decimals= 7 ) =='873.489732 MB')
    assert (friendly_bytes( 873489732.079067 ,decimals= 8 ) =='873.48973207 MB')
    assert (friendly_bytes( 873489732.079067 ,decimals= 9 ) =='873.489732079 MB')
    assert (friendly_bytes( 1283.003643 ,decimals= 0 ) =='1 KB')
    assert (friendly_bytes( 1283.003643 ,decimals= 1 ) =='1.2 KB')
    assert (friendly_bytes( 1283.003643 ,decimals= 2 ) =='1.28 KB')
    assert (friendly_bytes( 1283.003643 ,decimals= 3 ) =='1.283 KB')
    assert (friendly_bytes( 1283.003643 ,decimals= 4 ) =='1.283 KB')
    assert (friendly_bytes( 1283.003643 ,decimals= 5 ) =='1.283 KB')
    assert (friendly_bytes( 1283.003643 ,decimals= 6 ) =='1.283003 KB')
    assert (friendly_bytes( 1283.003643 ,decimals= 7 ) =='1.2830036 KB')
    assert (friendly_bytes( 1283.003643 ,decimals= 8 ) =='1.28300364 KB')
    assert (friendly_bytes( 1283.003643 ,decimals= 9 ) =='1.283003643 KB')
    assert (friendly_bytes( 38732.3402424 ,decimals= 0 ) =='38 KB')
    assert (friendly_bytes( 38732.3402424 ,decimals= 1 ) =='38.7 KB')
    assert (friendly_bytes( 38732.3402424 ,decimals= 2 ) =='38.73 KB')
    assert (friendly_bytes( 38732.3402424 ,decimals= 3 ) =='38.732 KB')
    assert (friendly_bytes( 38732.3402424 ,decimals= 4 ) =='38.7323 KB')
    assert (friendly_bytes( 38732.3402424 ,decimals= 5 ) =='38.73234 KB')
    assert (friendly_bytes( 38732.3402424 ,decimals= 6 ) =='38.73234 KB')
    assert (friendly_bytes( 38732.3402424 ,decimals= 7 ) =='38.7323402 KB')
    assert (friendly_bytes( 38732.3402424 ,decimals= 8 ) =='38.73234024 KB')
    assert (friendly_bytes( 38732.3402424 ,decimals= 9 ) =='38.732340242 KB')
    assert (friendly_bytes( 11.22 ,decimals= 0 ) =='11 B')
    assert (friendly_bytes( 11.22 ,decimals= 1 ) =='11.2 B')
    assert (friendly_bytes( 11.22 ,decimals= 2 ) =='11.22 B')
    assert (friendly_bytes( 11.22 ,decimals= 3 ) =='11.22 B')
    assert (friendly_bytes( 11.22 ,decimals= 4 ) =='11.22 B')
    assert (friendly_bytes( 11.22 ,decimals= 5 ) =='11.22 B')
    assert (friendly_bytes( 11.22 ,decimals= 6 ) =='11.22 B')
    assert (friendly_bytes( 11.22 ,decimals= 7 ) =='11.22 B')
    assert (friendly_bytes( 11.22 ,decimals= 8 ) =='11.22 B')
    assert (friendly_bytes( 11.22 ,decimals= 9 ) =='11.22 B')
    assert (friendly_bytes( 32873298329.32 ,decimals= 0 ) =='32 GB')
    assert (friendly_bytes( 32873298329.32 ,decimals= 1 ) =='32.8 GB')
    assert (friendly_bytes( 32873298329.32 ,decimals= 2 ) =='32.87 GB')
    assert (friendly_bytes( 32873298329.32 ,decimals= 3 ) =='32.873 GB')
    assert (friendly_bytes( 32873298329.32 ,decimals= 4 ) =='32.8732 GB')
    assert (friendly_bytes( 32873298329.32 ,decimals= 5 ) =='32.87329 GB')
    assert (friendly_bytes( 32873298329.32 ,decimals= 6 ) =='32.873298 GB')
    assert (friendly_bytes( 32873298329.32 ,decimals= 7 ) =='32.8732983 GB')
    assert (friendly_bytes( 32873298329.32 ,decimals= 8 ) =='32.87329832 GB')
    assert (friendly_bytes( 32873298329.32 ,decimals= 9 ) =='32.873298329 GB')
    assert (friendly_bytes( 3832.1 ,decimals= 0 ) =='3 KB')
    assert (friendly_bytes( 3832.1 ,decimals= 1 ) =='3.8 KB')
    assert (friendly_bytes( 3832.1 ,decimals= 2 ) =='3.83 KB')
    assert (friendly_bytes( 3832.1 ,decimals= 3 ) =='3.832 KB')
    assert (friendly_bytes( 3832.1 ,decimals= 4 ) =='3.8321 KB')
    assert (friendly_bytes( 3832.1 ,decimals= 5 ) =='3.8321 KB')
    assert (friendly_bytes( 3832.1 ,decimals= 6 ) =='3.8321 KB')
    assert (friendly_bytes( 3832.1 ,decimals= 7 ) =='3.8321 KB')
    assert (friendly_bytes( 3832.1 ,decimals= 8 ) =='3.8321 KB')
    assert (friendly_bytes( 3832.1 ,decimals= 9 ) =='3.8321 KB')

def test_binary_parameter():

    assert (friendly_bytes( 212321 , binary=True) =='207.34 KiB')
    assert (friendly_bytes( 45450 , binary=True) =='44.38 KiB')
    assert (friendly_bytes( 903428347234 , binary=True) =='841.38 GiB')
    assert (friendly_bytes( 238942.443 , binary=True) =='233.34 KiB')
    assert (friendly_bytes( 8343493409.22212 , binary=True) =='7.77 GiB')
    assert (friendly_bytes( 840933049 , binary=True) =='801.97 MiB')
    assert (friendly_bytes( 0 , binary=True) =='0 B')
    assert (friendly_bytes( 0.0 , binary=True) =='0 B')
    assert (friendly_bytes( 483434093 , binary=True) =='461.03 MiB')
    assert (friendly_bytes( 24 , binary=True) =='24.0 B')
    assert (friendly_bytes( 24.0 , binary=True) =='24.0 B')
    assert (friendly_bytes( 0.3 , binary=True) =='0.3 B')
    assert (friendly_bytes( 90.59438934 , binary=True) =='90.59 B')
    assert (friendly_bytes( 122133 , binary=True) =='119.27 KiB')
    assert (friendly_bytes( 328939324239329234 , binary=True) =='292.15 PiB')
    assert (friendly_bytes( 3434904393490 , binary=True) =='3.12 TiB')
    assert (friendly_bytes( 349823093209 , binary=True) =='325.79 GiB')
    assert (friendly_bytes( 332423.3232432 , binary=True) =='324.63 KiB')
    assert (friendly_bytes( 48234023409 , binary=True) =='44.92 GiB')
    assert (friendly_bytes( 32.3 , binary=True) =='32.29 B')
    assert (friendly_bytes( 239023932 , binary=True) =='227.95 MiB')
    assert (friendly_bytes( 0 , binary=True) =='0 B')
    assert (friendly_bytes( 11 , binary=True) =='11.0 B')

def test_false_binary_parameter():

    assert(friendly_bytes( 212321 , binary=False) =='212.32 KB')
    assert(friendly_bytes( 45450 , binary=False) =='45.45 KB')
    assert(friendly_bytes( 903428347234 , binary=False) =='903.42 GB')
    assert(friendly_bytes( 238942.443 , binary=False) =='238.94 KB')
    assert(friendly_bytes( 8343493409.22212 , binary=False) =='8.34 GB')
    assert(friendly_bytes( 840933049 , binary=False) =='840.93 MB')
    assert(friendly_bytes( 0 , binary=False) =='0 B')
    assert(friendly_bytes( 0.0 , binary=False) =='0 B')
    assert(friendly_bytes( 483434093 , binary=False) =='483.43 MB')
    assert(friendly_bytes( 24 , binary=False) =='24.0 B')
    assert(friendly_bytes( 24.0 , binary=False) =='24.0 B')
    assert(friendly_bytes( 0.3 , binary=False) =='0.3 B')
    assert(friendly_bytes( 90.59438934 , binary=False) =='90.59 B')
    assert(friendly_bytes( 122133 , binary=False) =='122.13 KB')
    assert(friendly_bytes( 328939324239329234 , binary=False) =='328.93 PB')
    assert(friendly_bytes( 3434904393490 , binary=False) =='3.43 TB')
    assert(friendly_bytes( 349823093209 , binary=False) =='349.82 GB')
    assert(friendly_bytes( 332423.3232432 , binary=False) =='332.42 KB')
    assert(friendly_bytes( 48234023409 , binary=False) =='48.23 GB')
    assert(friendly_bytes( 32.3 , binary=False) =='32.29 B')
    assert(friendly_bytes( 239023932 , binary=False) =='239.02 MB')
    assert(friendly_bytes( 0 , binary=False) =='0 B')
    assert(friendly_bytes( 11 , binary=False) =='11.0 B')

def test_eb_to_yb_sizes():

    assert(friendly_bytes( 0 , binary=False) =='0 B')
    assert(friendly_bytes( 1230000000000000000 , binary=False) =='1.23 EB')
    assert(friendly_bytes( 2460000000000000000 , binary=False) =='2.46 EB')
    assert(friendly_bytes( 3690000000000000000 , binary=False) =='3.69 EB')
    assert(friendly_bytes( 4920000000000000000 , binary=False) =='4.92 EB')
    assert(friendly_bytes( 6150000000000000000 , binary=False) =='6.15 EB')
    assert(friendly_bytes( 7380000000000000000 , binary=False) =='7.38 EB')
    assert(friendly_bytes( 0 , binary=False) =='0 B')
    assert(friendly_bytes( 4300000000000000000000 , binary=False) =='4.3 ZB')
    assert(friendly_bytes( 8600000000000000000000 , binary=False) =='8.6 ZB')
    assert(friendly_bytes( 12900000000000000000000 , binary=False) =='12.89 ZB')
    assert(friendly_bytes( 17200000000000000000000 , binary=False) =='17.2 ZB')
    assert(friendly_bytes( 21500000000000000000000 , binary=False) =='21.5 ZB')
    assert(friendly_bytes( 25800000000000000000000 , binary=False) =='25.79 ZB')
    assert(friendly_bytes( 0 , binary=False) =='0 B')
    assert(friendly_bytes( 1000000000000000000000000 , binary=False) =='1.0 YB')
    assert(friendly_bytes( 2000000000000000000000000 , binary=False) =='2.0 YB')
    assert(friendly_bytes( 3000000000000000000000000 , binary=False) =='3.0 YB')
    assert(friendly_bytes( 4000000000000000000000000 , binary=False) =='4.0 YB')
    assert(friendly_bytes( 5000000000000000000000000 , binary=False) =='5.0 YB')
    assert(friendly_bytes( 6000000000000000000000000 , binary=False) =='6.0 YB')
    assert(friendly_bytes( 0 , binary=False) =='0 B')
    assert(friendly_bytes( 51000000000000000000000000 , binary=False) =='51.0 YB')
    assert(friendly_bytes( 102000000000000000000000000 , binary=False) =='102.0 YB')
    assert(friendly_bytes( 153000000000000000000000000 , binary=False) =='153.0 YB')
    assert(friendly_bytes( 204000000000000000000000000 , binary=False) =='204.0 YB')
    assert(friendly_bytes( 255000000000000000000000000 , binary=False) =='255.0 YB')
    assert(friendly_bytes( 306000000000000000000000000 , binary=False) =='306.0 YB')

def test_keep_width_true():

    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 212321 , keep_width=True) =='212.320 KB')
    assert(friendly_bytes( 424642 , keep_width=True) =='424.640 KB')
    assert(friendly_bytes( 636963 , keep_width=True) =='636.960 KB')
    assert(friendly_bytes( 849284 , keep_width=True) =='849.280 KB')
    assert(friendly_bytes( 1061605 , keep_width=True) =='1.060000 MB')
    assert(friendly_bytes( 1273926 , keep_width=True) =='1.270000 MB')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 45450 , keep_width=True) =='45.450 KB')
    assert(friendly_bytes( 90900 , keep_width=True) =='90.900 KB')
    assert(friendly_bytes( 136350 , keep_width=True) =='136.350 KB')
    assert(friendly_bytes( 181800 , keep_width=True) =='181.800 KB')
    assert(friendly_bytes( 227250 , keep_width=True) =='227.250 KB')
    assert(friendly_bytes( 272700 , keep_width=True) =='272.700 KB')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 903428347234 , keep_width=True) =='903.420000000 GB')
    assert(friendly_bytes( 1806856694468 , keep_width=True) =='1.800000000000 TB')
    assert(friendly_bytes( 2710285041702 , keep_width=True) =='2.710000000000 TB')
    assert(friendly_bytes( 3613713388936 , keep_width=True) =='3.610000000000 TB')
    assert(friendly_bytes( 4517141736170 , keep_width=True) =='4.510000000000 TB')
    assert(friendly_bytes( 5420570083404 , keep_width=True) =='5.420000000000 TB')
    assert(friendly_bytes( 0.0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 238942.443 , keep_width=True) =='238.940 KB')
    assert(friendly_bytes( 477884.886 , keep_width=True) =='477.880 KB')
    assert(friendly_bytes( 716827.329 , keep_width=True) =='716.820 KB')
    assert(friendly_bytes( 955769.772 , keep_width=True) =='955.760 KB')
    assert(friendly_bytes( 1194712.215 , keep_width=True) =='1.190000 MB')
    assert(friendly_bytes( 1433654.658 , keep_width=True) =='1.430000 MB')
    assert(friendly_bytes( 0.0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 8343493409.22212 , keep_width=True) =='8.340000000 GB')
    assert(friendly_bytes( 16686986818.44424 , keep_width=True) =='16.680000000 GB')
    assert(friendly_bytes( 25030480227.66636 , keep_width=True) =='25.030000000 GB')
    assert(friendly_bytes( 33373973636.88848 , keep_width=True) =='33.370000000 GB')
    assert(friendly_bytes( 41717467046.1106 , keep_width=True) =='41.710000000 GB')
    assert(friendly_bytes( 50060960455.33272 , keep_width=True) =='50.060000000 GB')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 840933049 , keep_width=True) =='840.930000 MB')
    assert(friendly_bytes( 1681866098 , keep_width=True) =='1.680000000 GB')
    assert(friendly_bytes( 2522799147 , keep_width=True) =='2.520000000 GB')
    assert(friendly_bytes( 3363732196 , keep_width=True) =='3.360000000 GB')
    assert(friendly_bytes( 4204665245 , keep_width=True) =='4.200000000 GB')
    assert(friendly_bytes( 5045598294 , keep_width=True) =='5.040000000 GB')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 0.0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 0.0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 0.0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 0.0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 0.0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 0.0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 0.0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 483434093 , keep_width=True) =='483.430000 MB')
    assert(friendly_bytes( 966868186 , keep_width=True) =='966.860000 MB')
    assert(friendly_bytes( 1450302279 , keep_width=True) =='1.450000000 GB')
    assert(friendly_bytes( 1933736372 , keep_width=True) =='1.930000000 GB')
    assert(friendly_bytes( 2417170465 , keep_width=True) =='2.410000000 GB')
    assert(friendly_bytes( 2900604558 , keep_width=True) =='2.900000000 GB')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 24 , keep_width=True) =='24.0 B')
    assert(friendly_bytes( 48 , keep_width=True) =='48.0 B')
    assert(friendly_bytes( 72 , keep_width=True) =='72.0 B')
    assert(friendly_bytes( 96 , keep_width=True) =='96.0 B')
    assert(friendly_bytes( 120 , keep_width=True) =='120.0 B')
    assert(friendly_bytes( 144 , keep_width=True) =='144.0 B')
    assert(friendly_bytes( 0.0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 24.0 , keep_width=True) =='24.0 B')
    assert(friendly_bytes( 48.0 , keep_width=True) =='48.0 B')
    assert(friendly_bytes( 72.0 , keep_width=True) =='72.0 B')
    assert(friendly_bytes( 96.0 , keep_width=True) =='96.0 B')
    assert(friendly_bytes( 120.0 , keep_width=True) =='120.0 B')
    assert(friendly_bytes( 144.0 , keep_width=True) =='144.0 B')
    assert(friendly_bytes( 0.0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 0.3 , keep_width=True) =='0.3 B')
    assert(friendly_bytes( 0.6 , keep_width=True) =='0.6 B')
    assert(friendly_bytes( 0.8999999999999999 , keep_width=True) =='0.8999999999999999 B')
    assert(friendly_bytes( 1.2 , keep_width=True) =='1.2 B')
    assert(friendly_bytes( 1.5 , keep_width=True) =='1.5 B')
    assert(friendly_bytes( 1.7999999999999998 , keep_width=True) =='1.79 B')
    assert(friendly_bytes( 0.0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 90.59438934 , keep_width=True) =='90.59 B')
    assert(friendly_bytes( 181.18877868 , keep_width=True) =='181.18 B')
    assert(friendly_bytes( 271.78316802 , keep_width=True) =='271.78 B')
    assert(friendly_bytes( 362.37755736 , keep_width=True) =='362.37 B')
    assert(friendly_bytes( 452.97194670000005 , keep_width=True) =='452.97 B')
    assert(friendly_bytes( 543.56633604 , keep_width=True) =='543.56 B')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 122133 , keep_width=True) =='122.130 KB')
    assert(friendly_bytes( 244266 , keep_width=True) =='244.260 KB')
    assert(friendly_bytes( 366399 , keep_width=True) =='366.390 KB')
    assert(friendly_bytes( 488532 , keep_width=True) =='488.530 KB')
    assert(friendly_bytes( 610665 , keep_width=True) =='610.660 KB')
    assert(friendly_bytes( 732798 , keep_width=True) =='732.790 KB')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 328939324239329234 , keep_width=True) =='328.930000000000000 PB')
    assert(friendly_bytes( 657878648478658468 , keep_width=True) =='657.870000000000000 PB')
    assert(friendly_bytes( 986817972717987702 , keep_width=True) =='986.810000000000000 PB')
    assert(friendly_bytes( 1315757296957316936 , keep_width=True) =='1.310000000000000000 EB')
    assert(friendly_bytes( 1644696621196646170 , keep_width=True) =='1.640000000000000000 EB')
    assert(friendly_bytes( 1973635945435975404 , keep_width=True) =='1.970000000000000000 EB')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 3434904393490 , keep_width=True) =='3.430000000000 TB')
    assert(friendly_bytes( 6869808786980 , keep_width=True) =='6.860000000000 TB')
    assert(friendly_bytes( 10304713180470 , keep_width=True) =='10.300000000000 TB')
    assert(friendly_bytes( 13739617573960 , keep_width=True) =='13.730000000000 TB')
    assert(friendly_bytes( 17174521967450 , keep_width=True) =='17.170000000000 TB')
    assert(friendly_bytes( 20609426360940 , keep_width=True) =='20.600000000000 TB')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 349823093209 , keep_width=True) =='349.820000000 GB')
    assert(friendly_bytes( 699646186418 , keep_width=True) =='699.640000000 GB')
    assert(friendly_bytes( 1049469279627 , keep_width=True) =='1.040000000000 TB')
    assert(friendly_bytes( 1399292372836 , keep_width=True) =='1.390000000000 TB')
    assert(friendly_bytes( 1749115466045 , keep_width=True) =='1.740000000000 TB')
    assert(friendly_bytes( 2098938559254 , keep_width=True) =='2.090000000000 TB')
    assert(friendly_bytes( 0.0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 332423.3232432 , keep_width=True) =='332.420 KB')
    assert(friendly_bytes( 664846.6464864 , keep_width=True) =='664.840 KB')
    assert(friendly_bytes( 997269.9697296 , keep_width=True) =='997.260 KB')
    assert(friendly_bytes( 1329693.2929728 , keep_width=True) =='1.320000 MB')
    assert(friendly_bytes( 1662116.6162160002 , keep_width=True) =='1.660000 MB')
    assert(friendly_bytes( 1994539.9394592 , keep_width=True) =='1.990000 MB')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 48234023409 , keep_width=True) =='48.230000000 GB')
    assert(friendly_bytes( 96468046818 , keep_width=True) =='96.460000000 GB')
    assert(friendly_bytes( 144702070227 , keep_width=True) =='144.700000000 GB')
    assert(friendly_bytes( 192936093636 , keep_width=True) =='192.930000000 GB')
    assert(friendly_bytes( 241170117045 , keep_width=True) =='241.170000000 GB')
    assert(friendly_bytes( 289404140454 , keep_width=True) =='289.400000000 GB')
    assert(friendly_bytes( 0.0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 32.3 , keep_width=True) =='32.29 B')
    assert(friendly_bytes( 64.6 , keep_width=True) =='64.59 B')
    assert(friendly_bytes( 96.89999999999999 , keep_width=True) =='96.9 B')
    assert(friendly_bytes( 129.2 , keep_width=True) =='129.19 B')
    assert(friendly_bytes( 161.5 , keep_width=True) =='161.5 B')
    assert(friendly_bytes( 193.79999999999998 , keep_width=True) =='193.8 B')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 239023932 , keep_width=True) =='239.020000 MB')
    assert(friendly_bytes( 478047864 , keep_width=True) =='478.040000 MB')
    assert(friendly_bytes( 717071796 , keep_width=True) =='717.070000 MB')
    assert(friendly_bytes( 956095728 , keep_width=True) =='956.090000 MB')
    assert(friendly_bytes( 1195119660 , keep_width=True) =='1.190000000 GB')
    assert(friendly_bytes( 1434143592 , keep_width=True) =='1.430000000 GB')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 0 , keep_width=True) =='0 B')
    assert(friendly_bytes( 11 , keep_width=True) =='11.0 B')
    assert(friendly_bytes( 22 , keep_width=True) =='22.0 B')
    assert(friendly_bytes( 33 , keep_width=True) =='33.0 B')
    assert(friendly_bytes( 44 , keep_width=True) =='44.0 B')
    assert(friendly_bytes( 55 , keep_width=True) =='55.0 B')
    assert(friendly_bytes( 66 , keep_width=True) =='66.0 B')